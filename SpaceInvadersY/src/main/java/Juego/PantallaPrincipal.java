package Juego;

import java.awt.Color;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.awt.image.BufferedImage;
import java.util.ArrayList;
import java.util.Random;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JPanel;

/**
 *
 * @author YELA
 */
public class PantallaPrincipal extends javax.swing.JFrame implements KeyListener{
    
    String mensageInicio="apachurrale start";
    public Jugador player2;
    public Jugador player;
    public int contadorBalasPlayer1=0;
    public int contadorBalasPlayer2=0;
    public ArrayList<Disparo> balas=new ArrayList<Disparo>();
    int puntaje = 000;
    int limiteP1=0;
    int limiteP2=0;

    /**
     * Creates new form PantallaPrincipal
     */
    public PantallaPrincipal() {
        initComponents();
        this.addKeyListener(this);
        setFocusable(true);
    }
    
    public void iniciar(){
        player = new Jugador(200, 575, 10);
        this.areaDeJuego.add(player);
        //creacion player2
        player2 = new Jugador(500, 575, 10);
        this.areaDeJuego.add(player2);
        this.limiteP1 = player2.getPosX()-10;
        this.limiteP2 = player.getPosX()+65;
        /*/creacion de los invasores
        invader=new invasor(350, 25, 5);
        this.areaDeJuego.add(invader);*/
        spawninvader hiloInvasores = new spawninvader();
        hiloInvasores.start();
        
        contadorBalasPlayer1=0;
        contadorBalasPlayer2=0;
        
        JLabel saludo2 = new JLabel("este es un label nuevo XD XD XD");
        saludo2.setBounds(0, 0, 25, 25);
        this.getContentPane().add(saludo2);
        
        //this.areaDeJuego.updateUI();
    }
    
    public void desplazar(boolean dir, Jugador moverplayer){
        moverplayer.setVisible(false);
        if (dir) {
            moverplayer.setLocation(moverplayer.nuevax(true), moverplayer.getPosY());
        }else{
            moverplayer.setLocation(moverplayer.nuevax(false), moverplayer.getPosY());
        }
        moverplayer.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        areaDeJuego = new javax.swing.JPanel();
        startbtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        scorep1lb = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        areaDeJuego.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        startbtn.setText("START");
        startbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startbtnActionPerformed(evt);
            }
        });

        jLabel1.setText("Enemigos");

        jLabel2.setBackground(new java.awt.Color(204, 102, 0));
        jLabel2.setText("Jugador1");
        jLabel2.setOpaque(true
        );

        jLabel3.setText("Jugador2");

        javax.swing.GroupLayout areaDeJuegoLayout = new javax.swing.GroupLayout(areaDeJuego);
        areaDeJuego.setLayout(areaDeJuegoLayout);
        areaDeJuegoLayout.setHorizontalGroup(
            areaDeJuegoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(areaDeJuegoLayout.createSequentialGroup()
                .addGap(160, 160, 160)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(108, 108, 108))
            .addGroup(areaDeJuegoLayout.createSequentialGroup()
                .addGroup(areaDeJuegoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(areaDeJuegoLayout.createSequentialGroup()
                        .addGap(354, 354, 354)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(areaDeJuegoLayout.createSequentialGroup()
                        .addGap(322, 322, 322)
                        .addComponent(startbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(346, Short.MAX_VALUE))
        );
        areaDeJuegoLayout.setVerticalGroup(
            areaDeJuegoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, areaDeJuegoLayout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(250, 250, 250)
                .addComponent(startbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 368, Short.MAX_VALUE)
                .addGroup(areaDeJuegoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)))
        );

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel4.setText("SCORE");

        scorep1lb.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        scorep1lb.setText("000");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(scorep1lb)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                .addComponent(areaDeJuego, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(35, Short.MAX_VALUE)
                .addComponent(areaDeJuego, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29))
            .addGroup(layout.createSequentialGroup()
                .addGap(277, 277, 277)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scorep1lb)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void startbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startbtnActionPerformed
        // TODO add your handling code here:
        startbtn.setVisible(false);
        iniciar();
    }//GEN-LAST:event_startbtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PantallaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PantallaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PantallaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PantallaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PantallaPrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel areaDeJuego;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel scorep1lb;
    private javax.swing.JButton startbtn;
    // End of variables declaration//GEN-END:variables

    @Override
    public void keyTyped(KeyEvent e) {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void keyPressed(KeyEvent e) {
        //System.out.println(e.getKeyCode());
        //A=65 D=68 S=83 J=74 K=75 L=76
        if (e.getKeyCode()==65) {
            if (player.getPosX()>=0) {
                desplazar(false, player);
            }
        }else if (e.getKeyCode()==68) {
            if (player.getPosX()<=limiteP1) {
                desplazar(true, player);
                this.limiteP1 = player2.getPosX()-75;
                this.limiteP2 = player.getPosX()+65;
            }
        }else if (e.getKeyCode()==83) {
            //desplazar(false, player);
            System.out.println("Estas disparando player1");
            Disparo bala=new Disparo(player.getPosX()+5, player.getPosY()-(5), 5);
            areaDeJuego.add(bala);
            this.balas.add(bala);
            prueba hilodisparo1 = new prueba(bala, contadorBalasPlayer1, 1);
            hilodisparo1.start();
        }else if (e.getKeyCode()==74) {
            if (player2.getPosX()>=limiteP2) {
                desplazar(false, player2);
                this.limiteP1 = player2.getPosX()-75;
                this.limiteP2 = player.getPosX()+65;
            }
        }else if (e.getKeyCode()==75) {
            //desplazar(false, player);
            System.out.println("estas disparando player2");
            Disparo bala=new Disparo(player2.getPosX()+5, player2.getPosY()-(5), 5);
            areaDeJuego.add(bala);
            this.balas.add(bala);
            prueba hilo2 = new prueba(bala, contadorBalasPlayer1, 1);
            hilo2.start();
        }else if (e.getKeyCode()==76) {
            if (player2.getPosX()<=810) {
                desplazar(true, player2);
            }
        }else{
            System.out.println("Tecla sin uso");
        }
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
    @Override
    public void keyReleased(KeyEvent e) {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
    
    public class prueba extends Thread{
        
        Disparo bala_disparada;
        
        public prueba(Disparo bala, int numero, int jugador){
            super(" hilo " + numero + " disparo jugador " + jugador);
            this.bala_disparada = bala;
        }
        
        @Override
        public void run() {
            for (int i = 0; i < 120; i++){
                this.bala_disparada.setLocation(this.bala_disparada.getPosX(), (this.bala_disparada.getPosY()-(this.bala_disparada.getVelocidad())));
                this.bala_disparada.setPosY(this.bala_disparada.getPosY()-(this.bala_disparada.getVelocidad()));
                //areaDeJuego.updateUI();
                try{
                    Thread.sleep(100);
                }catch (Exception e) {
                    System.out.println("error: "+e);
                }
            }
            areaDeJuego.remove(this.bala_disparada);
        }
    }
    
    public class movimientoinvader extends Thread{
        
        invasor invasor;
        
        public movimientoinvader(invasor invader, int numeroInvader){
            super(" hilo" + numeroInvader);
            this.invasor = invader;
        }
        @Override
        public void run() {
            for (int i = 0; i < 500; i++) {
                this.invasor.setLocation(this.invasor.getPosX(), (this.invasor.getPosY()+this.invasor.getVelocidad()));
                this.invasor.setPosY(this.invasor.getPosY()+this.invasor.getVelocidad());
                areaDeJuego.updateUI();
                try{
                    Thread.sleep(100);
                }catch (Exception e) {
                    System.out.println("error: "+e);
                }
                colision();
            }
            areaDeJuego.remove(this.invasor);
        }
        
        public void colision(){
            for (int i = 0; i < balas.size(); i++) {
                if ((this.invasor.getPosX()<= ((Disparo)balas.get(i)).getPosX()+15 && this.invasor.getPosX()+35>= ((Disparo)balas.get(i)).getPosX()) && (this.invasor.getPosY()+50>= ((Disparo)balas.get(i)).getPosY() && this.invasor.getPosY()<= ((Disparo)balas.get(i)).getPosY()+15)) {
                    areaDeJuego.remove(this.invasor);
                    areaDeJuego.remove(balas.get(i));
                    puntaje+=1;
                    scorep1lb.setText(""+puntaje);
                }
            }
        }
    }
    
    public class spawninvader extends Thread{
        
        public spawninvader(){
            super(" hilo para crear invaders");
        }
        
        @Override
        public void run() {
            int speed=2;
            int contador=0;
            int contadorinv=0;
            while(true) {
                Random aleatorioR=new Random();
                int aleatorio=aleatorioR.nextInt(810);
                invasor invader=new invasor(aleatorio, 0, speed);
                areaDeJuego.add(invader);
                movimientoinvader mover=new movimientoinvader(invader, contadorinv);
                mover.start();
                contadorinv+=1;
                contador+=1;
                if (contador==25) {
                    contador=0;
                    speed+=2;
                    //invader.setVelocidad(speed);
                }
                try{
                    Thread.sleep(1000);
                }catch (Exception e) {
                    System.out.println("error: "+e);
                }
            }
        }
    }
    
}
